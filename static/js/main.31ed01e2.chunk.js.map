{"version":3,"sources":["components/Mobil/Collect/Collection.jsx","components/Mobil/Contact/Contact.jsx","components/Mobil/IconSJX/Icon.jsx","components/Mobil/FourSteps/FourSteps.jsx","components/Mobil/SideDrawer/SideDrawerButton.jsx","components/Mobil/Header/HeaderMobile.jsx","components/Mobil/Help/Help.jsx","components/Mobil/Account/OpenAccount.jsx","components/Mobil/SideDrawer/SideDrawer.jsx","components/Mobil/Mobile.jsx","components/Tablet/HeaderTablet.jsx","components/Tablet/Tablet.jsx","components/Desktop/Header.jsx","components/Desktop/Desktop.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["Collection","className","src","process","alt","Contact","id","style","transform","href","Icon","icon","FourSteps","DrawerToggleButton","func","state","onClick","HeaderMobile","Help","OpenAccount","SideDrawer","Mobile","useState","drawerOpen","setDrawerOpen","console","log","HeaderTablet","Tablet","Header","Desktop","App","isMobileOnly","isTablet","isBrowser","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31ed01e2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Collection = () => {\n  return (\n    <>\n      <div className=\"container collection\">\n        <h2>\n          Chcesz oddać swoje rzeczy lub zorganizować zbiórkę lokalną?\n          <img\n            src={process.env.PUBLIC_URL + \"/img/parzenica.svg\"}\n            alt=\"parzenica\"\n          />\n        </h2>\n        <button className=\"button\">Załóz konto</button>\n      </div>\n    </>\n  );\n};\n\nexport default Collection;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <>\n      <div id=\"contact\" className=\"container contact\">\n        <h2>skontaktuj się z nami</h2>\n        <img\n          src={process.env.PUBLIC_URL + \"/img/parzenica_white.svg\"}\n          alt=\"parzenica biała\"\n        />\n        <div className=\"social--media\">\n          <img src={process.env.PUBLIC_URL + \"/img/phone.svg\"} alt=\"phone\" />\n          <img src={process.env.PUBLIC_URL + \"/img/mail.svg\"} alt=\"mail\" />\n          <img\n            src={process.env.PUBLIC_URL + \"/img/twitter.svg\"}\n            alt=\"twitter\"\n          />\n          <img src={process.env.PUBLIC_URL + \"/img/fb.svg\"} alt=\"facebook\" />\n          <img src={process.env.PUBLIC_URL + \"/img/ig.svg\"} alt=\"instagram\" />\n        </div>\n        <img\n          style={{ transform: \"rotate(180deg)\" }}\n          src={process.env.PUBLIC_URL + \"/img/parzenica_white.svg\"}\n          alt=\"parzenica biała\"\n        />\n        <ul>\n          <li>\n            <a href=\"\">Regulamin</a>\n          </li>\n          <li>\n            <a href=\"\">Polityka prywatności</a>\n          </li>\n          <li>\n            <a href=\"\">Instrukcja jak spakować rzeczy do oddania</a>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Icon = ({ icon }) => {\n  return <img className=\"icon\" src={icon} alt=\"icon\" />;\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Carousel from \"react-elastic-carousel\";\nimport Icon from \"../IconSJX/Icon\";\n\nconst FourSteps = () => {\n  return (\n    <>\n      <div className=\"container carousel\">\n        <img\n          src={process.env.PUBLIC_URL + \"/img/parzenica.svg\"}\n          alt=\"parzenica\"\n        />\n        <button className=\"button\">Wystarczą 4 proste kroki</button>\n        <img\n          src={process.env.PUBLIC_URL + \"/img/parzenica.svg\"}\n          alt=\"parzenica\"\n        />\n        <div className=\"four--steps\">\n          <div className=\"\"></div>\n          <Carousel>\n            <Icon\n              icon={process.env.PUBLIC_URL + \"/img/wybierz_rzeczy.svg\"}\n              alt=\"wybierz rzeczy\"\n            />\n            <Icon\n              icon={process.env.PUBLIC_URL + \"/img/spakuj.svg\"}\n              alt=\"spakuj\"\n            />\n            <Icon\n              icon={process.env.PUBLIC_URL + \"/img/zdecyduj.svg\"}\n              alt=\"zdecyduj\"\n            />\n            <Icon\n              icon={process.env.PUBLIC_URL + \"/img/kurier.svg\"}\n              alt=\"kurier\"\n            />\n          </Carousel>\n          <div className=\"\"></div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default FourSteps;\n","import React from \"react\";\n\nconst DrawerToggleButton = ({ func, state }) => (\n  <button\n    onClick={func}\n    style={{ transform: state ? \"rotate(90deg)\" : \"rotate(0deg)\" }}\n    className=\"toggle-button\"\n  >\n    <i className=\"fas fa-bars\"></i>\n  </button>\n);\n\nexport default DrawerToggleButton;\n","import React from \"react\";\nimport DrawerToggleButton from \"../SideDrawer/SideDrawerButton\";\n\nconst HeaderMobile = ({ func, state }) => {\n  return (\n    <>\n      <header className=\"container desktop\">\n        <img\n          src={process.env.PUBLIC_URL + \"/img/misio_sam_mobile.png\"}\n          alt=\"misio\"\n        />\n        <div className=\"box two--vertical\">\n          <h1>\n            Zacznij <br /> pomagać!\n          </h1>\n          <img\n            src={process.env.PUBLIC_URL + \"/img/parzenica.svg\"}\n            alt=\"parzenica\"\n          />\n        </div>\n        <DrawerToggleButton func={func} state={state} />\n      </header>\n    </>\n  );\n};\nexport default HeaderMobile;\n","import React from \"react\";\nimport Carousel from \"react-elastic-carousel\";\nimport Icon from \"../IconSJX/Icon\";\n\nconst Help = () => {\n  return (\n    <>\n      <div className=\"container help\">\n        <div className=\"three--steps\">\n          <h2>Komu pomagamy?</h2>\n          <img\n            src={process.env.PUBLIC_URL + \"/img/parzenica.svg\"}\n            alt=\"parzenica\"\n          />\n          <Carousel>\n            <Icon\n              icon={process.env.PUBLIC_URL + \"/img/fundacje.svg\"}\n              alt=\"fundacje\"\n            />\n            <Icon icon={process.env.PUBLIC_URL + \"/img/ngo.svg\"} alt=\"ngo\" />\n            <Icon\n              icon={process.env.PUBLIC_URL + \"/img/lokalsi.svg\"}\n              alt=\"zbiórki lokalne\"\n            />\n          </Carousel>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Help;\n","import React from \"react\";\n\nconst OpenAccount = () => {\n  return (\n    <>\n      <div className=\"container account\">\n        <h3>Masz w domu rzeczy, z którymi nie wiesz co zrobić?</h3>\n        <h2>\n          ODDAJ JE POTRZEBUJĄCYM <br />\n          <span>- szybko i w zaufane ręce</span>\n          <img src={process.env.PUBLIC_URL + \"/img/parzenica.svg\"} alt=\"\" />\n        </h2>\n        <button className=\"button\">Załóz konto</button>\n      </div>\n    </>\n  );\n};\n\nexport default OpenAccount;\n","import React from \"react\";\n\nconst SideDrawer = ({ state }) => (\n  <nav\n    className=\"side-drawer\"\n    style={{ transform: state ? \"translateX(0)\" : \"translateX(-150%)\" }}\n  >\n    <ul className=\"login--list\">\n      <li>\n        <a href=\"/\">Zaloguj</a>\n      </li>\n      <li>\n        <a href=\"/\">Załóz konto</a>\n      </li>\n    </ul>\n    <img src={process.env.PUBLIC_URL + \"/img/parzenica.svg\"} alt=\"\" />\n    <ul className=\"menu--list\">\n      <li>\n        <a href=\"/\">O co chodzi?</a>\n      </li>\n      <li>\n        <a href=\"/\">O nas</a>\n      </li>\n      <li>\n        <a href=\"/\">Fundacja i organizacje</a>\n      </li>\n      <li>\n        <a href=\"/\">Kontakt</a>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport Collection from \"./Collect/Collection\";\nimport Contact from \"../Mobil/Contact/Contact\";\nimport FourSteps from \"../Mobil/FourSteps/FourSteps\";\nimport HeaderMobile from \"../Mobil/Header/HeaderMobile\";\nimport Help from \"../Mobil/Help/Help\";\nimport OpenAccount from \"./Account/OpenAccount\";\nimport SideDrawer from \"./SideDrawer/SideDrawer\";\n\nconst Mobile = () => {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  console.log(drawerOpen);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(!drawerOpen);\n  };\n  return (\n    <>\n      <HeaderMobile func={handleDrawerOpen} state={drawerOpen} />\n      <SideDrawer state={drawerOpen} />\n      <OpenAccount />\n      <FourSteps />\n      <Help />\n      <Collection />\n      <Contact />\n    </>\n  );\n};\nexport default Mobile;\n","import React from \"react\";\n\nconst HeaderTablet = () => {\n  return (\n    <>\n      <h1>Header</h1>\n      <h2>Tablett</h2>\n    </>\n  );\n};\nexport default HeaderTablet;\n","import React from \"react\";\nimport HeaderTablet from \"./HeaderTablet\";\n\nconst Tablet = () => {\n  return <HeaderTablet />;\n};\n\nexport default Tablet;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <>\n      <h1>Header desktop</h1>\n    </>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\n\nconst Desktop = () => {\n  return (\n    <>\n      <Header />\n    </>\n  );\n};\n\nexport default Desktop;\n","import React from \"react\";\nimport { isMobileOnly, isTablet, isBrowser } from \"react-device-detect\";\nimport \"./css/App.css\";\nimport Mobile from \"./Mobil/Mobile\";\nimport Tablet from \"./Tablet/Tablet\";\nimport Desktop from \"./Desktop/Desktop\";\n\nfunction App() {\n  const renderContent = () => {\n    if (isMobileOnly) {\n      return <Mobile />;\n    }\n    if (isTablet) {\n      return <Tablet />;\n    }\n    if (isBrowser) {\n      return <Desktop />;\n    }\n  };\n\n  return renderContent();\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./components/css/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}